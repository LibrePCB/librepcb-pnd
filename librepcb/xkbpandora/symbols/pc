// $XKeyboardConfig$

//
// $XFree86: xc/programs/xkbcomp/symbols/pc,v 1.9 2003/06/09 19:59:46 dawes Exp $

default partial alphanumeric_keys modifier_keys 
xkb_symbols "pc104" {

        name [Group1]= "us";


        // ESC key on Fn layer
        key <ESC> { [ Escape ] };


      //key <AE01> { [ 1, exclam ] };
        key <AE01> { [ 1, section ] };

      //key <AE02> { [ 2, at ] };
        key <AE02> { [ 2, braceleft ] };

      //key <AE03> { [ 3, numbersign ] };
        key <AE03> { [ 3, braceright ] };

      //key <AE04> { [ 4, dollar ] };
        key <AE04> { [ 4, asciitilde ] };

        key <AE05> { [ 5, percent ] };

        key <AE06> { [ 6, asciicircum ] };

        key <AE07> { [ 7, ampersand ] };

        key <AE08> { [ 8, asterisk ] };

      //key <AE09> { [ 9, parenleft ] };
        key <AE09> { [ 9, bracketleft ] };

      //key <AE10> { [ 0, parenright ] };
        key <AE10> { [ 0, bracketright ] };

        // keycode not generated by Pandora input devices
//      key <AE11> { [ minus, underscore ] };

        // '=' on Fn layer
        key <AE12> { [ equal, plus ] };

        key <BKSP> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ BackSpace, Terminate_Server ]
            symbols[Group1]= [ BackSpace, Delete ]
        };


        key  <TAB> { [ Tab, ISO_Left_Tab ] };

        key <AD01> {
            type= "ALPHABETIC",
            symbols[Group1]= [ q, Q ]
        };

        key <AD02> {
            type= "ALPHABETIC",
            symbols[Group1]= [ w, W ]
        };

        key <AD03> {
            type= "ALPHABETIC",
            symbols[Group1]= [ e, E ]
        };

        key <AD04> {
            type= "ALPHABETIC",
            symbols[Group1]= [ r, R ]
        };

        key <AD05> {
            type= "ALPHABETIC",
            symbols[Group1]= [ t, T ]
        };

        key <AD06> {
            type= "ALPHABETIC",
            symbols[Group1]= [ y, Y ]
        };

        key <AD07> {
            type= "ALPHABETIC",
            symbols[Group1]= [ u, U ]
        };

        key <AD08> {
            type= "ALPHABETIC",
            symbols[Group1]= [ i, I ]
        };

        key <AD09> {
            type= "ALPHABETIC",
            symbols[Group1]= [ o, O ]
        };

        key <AD10> {
            type= "ALPHABETIC",
            symbols[Group1]= [ p, P ]
        };

        // '(' on Fn layer
      //key <AD11> { [ bracketleft, braceleft ] };
        key <AD11> { [ parenleft ] };

        // ')' on Fn layer
      //key <AD12> { [ bracketright, braceright ] };
        key <AD12> { [ parenright ] };

      //key <RTRN> { [ Return ] };
        key <RTRN> {
            symbols[Group1]= [ Return, Multi_key ],
            symbols[Group2]= [ Return ] // why?
        };


        // SELECT button
        key <LCTL> { [ Control_L ] };

        key <AC01> {
            type= "ALPHABETIC",
            symbols[Group1]= [ a, A ]
        };

        key <AC02> {
            type= "ALPHABETIC",
            symbols[Group1]= [ s, S ]
        };

        key <AC03> {
            type= "ALPHABETIC",
            symbols[Group1]= [ d, D ]
        };

        key <AC04> {
            type= "ALPHABETIC",
            symbols[Group1]= [ f, F ]
        };

        key <AC05> {
            type= "ALPHABETIC",
            symbols[Group1]= [ g, G ]
        };

        key <AC06> {
            type= "ALPHABETIC",
            symbols[Group1]= [ h, H ]
        };

        key <AC07> {
            type= "ALPHABETIC",
            symbols[Group1]= [ j, J ]
        };

        key <AC08> {
            type= "ALPHABETIC",
            symbols[Group1]= [ k, K ]
        };

        key <AC09> {
            type= "ALPHABETIC",
            symbols[Group1]= [ l, L ]
        };

        // ';' on Fn layer
      //key <AC10> { [ semicolon, colon ] };
        key <AC10> { [ semicolon ] };

        // '\'' on Fn layer
      //key <AC11> { [ apostrophe, quotedbl ] };
        key <AC11> { [ apostrophe ] };

        // '`' on Fn layer
      //key <TLDE> { [ grave, asciitilde ] };
        key <TLDE> { [ grave ] };


        // keyboard shift
        key <LFSH> { [ Shift_L ] };

        // '\\' on Fn layer
        key <BKSL> { [ backslash, bar ] };

        key <AB01> {
            type= "ALPHABETIC",
            symbols[Group1]= [ z, Z ]
        };

        key <AB02> {
            type= "ALPHABETIC",
            symbols[Group1]= [ x, X ]
        };

        key <AB03> {
            type= "ALPHABETIC",
            symbols[Group1]= [ c, C ]
        };

        key <AB04> {
            type= "ALPHABETIC",
            symbols[Group1]= [ v, V ]
        };

        key <AB05> {
            type= "ALPHABETIC",
            symbols[Group1]= [ b, B ]
        };

        key <AB06> {
            type= "ALPHABETIC",
            symbols[Group1]= [ n, N ]
        };

        key <AB07> {
            type= "ALPHABETIC",
            symbols[Group1]= [ m, M ]
        };

        key <AB08> { [ comma, less ] };

        key <AB09> { [ period, greater ] };

        // '/' on Fn layer
      //key <AB10> { [ slash, question ] };
        key <AB10> { [ slash ] };

        // Left shoulder
        key <RTSH> { [ Shift_R ] };


        // keycode not generated by Pandora input devices
//      key <KPMU> {
//          type= "CTRL+ALT",
//          symbols[Group1]= [ KP_Multiply, XF86_ClearGrab ]
//      };

        // START button
      //key <LALT> { [ Alt_L, Meta_L ] };
        key <LALT> { [ Alt_L ] };

        key <SPCE> { [ space ] };

        key <CAPS> { [ Caps_Lock ] };


        // F1 on Fn layer
        key <FK01> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ F1, XF86_Switch_VT_1 ]
            symbols[Group1]= [ F1 ]
        };

        // F2 on Fn layer
        key <FK02> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ F2, XF86_Switch_VT_2 ]
            symbols[Group1]= [ F2 ]
        };

        // F3 on Fn layer
        key <FK03> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ F3, XF86_Switch_VT_3 ]
            symbols[Group1]= [ F3 ]
        };

        // F4 on Fn layer
        key <FK04> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ F4, XF86_Switch_VT_4 ]
            symbols[Group1]= [ F4 ]
        };

        // F5 on Fn layer
        key <FK05> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ F5, XF86_Switch_VT_5 ]
            symbols[Group1]= [ F5 ]
        };

        // F6 on Fn layer
        key <FK06> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ F6, XF86_Switch_VT_6 ]
            symbols[Group1]= [ F6 ]
        };

        // F7 on Fn layer
        key <FK07> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ F7, XF86_Switch_VT_7 ]
            symbols[Group1]= [ F7 ]
        };

        // F8 on Fn layer
        key <FK08> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ F8, XF86_Switch_VT_8 ]
            symbols[Group1]= [ F8 ]
        };

        // F9 on Fn layer
        key <FK09> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ F9, XF86_Switch_VT_9 ]
            symbols[Group1]= [ F9 ]
        };

        // F10 on Fn layer
        key <FK10> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ F10, XF86_Switch_VT_10 ]
            symbols[Group1]= [ F10 ]
        };


        // keycode not generated by Pandora input devices
//      key <NMLK> { [ Num_Lock, Pointer_EnableKeys ] };

        // keycode not generated by Pandora input devices
//      key <SCLK> { [ Sroll_Lock ] };


        // keycode not generated by Pandora input devices
//      key <KP7> { [ KP_Home, KP_7 ] };

        // keycode not generated by Pandora input devices
//      key <KP8> { [ KP_Up, KP_8 ] };

        // keycode not generated by Pandora input devices
//      key <KP9> { [ KP_Prior, KP_9 ] };

        // '-' on Fn layer
        key <KPSU> {
      //    type= "CTRL+ALT",
      //    symbols[Group1]= [ KP_Subtract, XF86_Prev_VMode ]
            symbols[Group1]= [ minus ]
        };


        // keycode not generated by Pandora input devices
//    //key <KP4> { [ KP_Left, KP_4 ] };
//      key <KP4> { [ Home, quotedbl ] };

        // keycode not generated by Pandora input devices
//      key <KP5> { [ KP_Begin, KP_5 ] };

        // keycode not generated by Pandora input devices
//      key <KP6> { [ KP_Right, KP_6 ] };

        // '+' on Fn layer
        key <KPAD> {
      //    type= "CTRL+ALT",
      //    symbols[Group1]= [ plus, XF86_Next_VMode ]
            symbols[Group1]= [ plus ]
        };


        // keycode not generated by Pandora input devices
//    //key <KP1> { [ KP_End, KP_1 ] };
//      key <KP1> { [ Prior, Multi_key ] };

        // keycode not generated by Pandora input devices
//    //key <KP2> { [ KP_Down, KP_2 ] };
//      key <KP2> { [ End, XF86_Switch_VT_2 ] };

        // keycode not generated by Pandora input devices
//    //key <KP3> { [ KP_Next, KP_3 ] };
//      key <KP3> { [ Next, XF86_Switch_VT_1 ] };

        // keycode not generated by Pandora input devices
//      key <KP0> { [ KP_Insert, KP_0 ] };

        // keycode not generated by Pandora input devices
//      key <KPDL> { [ KP_Delete, KP_Decimal ] };


        // keycode not generated by Pandora input devices
//      key <LVL3> { [ ISO_Level3_Shift ] };

        // keycode not generated by Pandora input devices
//      key <HZTG> { [ Zenkaku_Hankaku ] };

        // keycode not generated by Pandora input devices
//      key <LSGT> {
//          type= "FOUR_LEVEL",
//          symbols[Group1]= [ less, greater, bar, brokenbar ]
//      };


        // F11 on Fn layer
        key <FK11> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ F11, XF86_Switch_VT_11 ]
            symbols[Group1]= [ F11 ]
        };

        // F12 on Fn layer
        key <FK12> {
            type= "CTRL+ALT",
      //    symbols[Group1]= [ F12, XF86_Switch_VT_12 ]
            symbols[Group1]= [ F12 ]
        };


        // keycode not generated by Pandora input devices
//      key <KATA> { [ Katakana ] };

        // keycode not generated by Pandora input devices
//      key <HIRA> { [ Hiragana ] };

        // keycode not generated by Pandora input devices
//      key <HENK> { [ Henkan_Mode ] };

        // keycode not generated by Pandora input devices
//      key <HKTG> { [ Hiragana_Katakana ] };

        // keycode not generated by Pandora input devices
//      key <MUHE> { [ Muhenkan ] };


        // keycode not generated by Pandora input devices
//      key <KPEN> { [ KP_Enter ] };


        // right shoulder
        key <RCTL> { [ Control_R ] };


        // keycode not generated by Pandora input devices
//      key <KPDV> {
//          type= "CTRL+ALT",
//          symbols[Group1]= [ KP_Divide, XF86_Ungrab ]
//      };

        // keycode not generated by Pandora input devices
//      key <PRSC> {
//          type= "PC_ALT_LEVEL2",
//          symbols[Group1]= [ Print, Sys_Req ]
//      };

        // keycode not generated by Pandora input devices
//      key <RALT> { [ Alt_R, Meta_R ] };

        // keycode not generated by Pandora input devices
//      key <LNFD> { [ Linefeed ] };


// Standard movement keys

        // (A) button
        key <HOME> { [ Home ] };

        // DPad up
        key <UP> { [ Up ] };

        // (Y) button
        key <PGUP> { [ Prior ] };

        // DPad left
        key <LEFT> { [ Left ] };

        // DPad right
        key <RGHT> { [ Right ] };

        // (B) button
        key <END> { [ End ] };

        // DPad down
        key <DOWN> { [ Down ] };

        // (X) button
        key <PGDN> { [ Next ] };


        // INS key on Fn layer
        key <INS> { [ Insert ] };

        // keycode not generated by Pandora input devices
//      key <DELE> { [ Delete ] };


        // keycode not generated by Pandora input devices
//      key <MUTE> { [ XF86AudioMute ] };

        // keycode not generated by Pandora input devices
//      key <VOL-> { [ XF86AudioLowerVolume ] };

        // keycode not generated by Pandora input devices
//      key <VOL+> { [ XF86AudioRaiseVolume ] };

        // Power switch right
        key <POWR> { [ XF86PowerOff ] };

        // keycode not generated by Pandora input devices
//      key <KPEQ> { [ KP_Equal ] };

        // keycode not generated by Pandora input devices
//      key <I126> { [ plusminus ] };

        // keycode not generated by Pandora input devices
//      key <PAUS> {
//          type= "PC_CONTROL_LEVEL2",
//          symbols[Group1]= [ Pause, Break ]
//      };

        // keycode not generated by Pandora input devices
//      key <I129> { [ KP_Separator ] };

        // keycode not generated by Pandora input devices
//      key <HNGL> { [ Hangul ] };

        // keycode not generated by Pandora input devices
//      key <HJCV> { [ Hangul_Hanja ] };

        // '¥' on Fn layer
        // keycode not mapped by default evdev rules
        key <AE13> { [ yen ] };

        // keycode not generated by Pandora input devices
//      key <LWIN> { [ Super_L ] };

        // keycode not generated by Pandora input devices
//      key <RWIN> { [ Super_R ] };

        // keycode not generated by Pandora input devices
//      key <COMP> { [ Menu ] };

        // keycode not generated by Pandora input devices
//      key <STOP> { [ Cancel ] };

        // keycode not generated by Pandora input devices
//      key <AGAI> { [ Redo ] };

        // keycode not generated by Pandora input devices
//      key <PROP> { [ SunProps ] };

        // keycode not generated by Pandora input devices
//      key <UNDO> { [ Undo ] };

        // keycode not generated by Pandora input devices
//      key <FRNT> { [ SunFront ] };

        // keycode not generated by Pandora input devices
//      key <COPY> { [ XF86Copy ] };

        // keycode not generated by Pandora input devices
//      key <OPEN> { [ SunOpen ] };

        // keycode not generated by Pandora input devices
//      key <PAST> { [ XF86Paste ] };

        // keycode not generated by Pandora input devices
//      key <FIND> { [ Find ] };

        // keycode not generated by Pandora input devices
//      key  <CUT> { [ XF86Cut ] };

        // keycode not generated by Pandora input devices
//      key <HELP> { [ Help ] };

        // Pandora symbol button
        key <I147> { [ XF86MenuKB ] };

        // keycode not generated by Pandora input devices
//      key <I148> { [ XF86Calculator ] };

        // keycode not generated by Pandora input devices
//      key <I150> { [ XF86Sleep ] };

        // keycode not generated by Pandora input devices
//      key <I151> { [ XF86WakeUp ] };

        // keycode not generated by Pandora input devices
//      key <I152> { [ XF86Explorer ] };

        // keycode not generated by Pandora input devices
//      key <I153> { [ XF86Send ] };

        // keycode not generated by Pandora input devices
//      key <I155> { [ XF86Xfer ] };

        // keycode not generated by Pandora input devices
//      key <I156> { [ XF86Launch1 ] };

        // keycode not generated by Pandora input devices
//      key <I157> { [ XF86Launch2 ] };

        // keycode not generated by Pandora input devices
//      key <I158> { [ XF86WWW ] };

        // keycode not generated by Pandora input devices
//      key <I159> { [ XF86DOS ] };

        // Power switch left
        key <I160> { [ XF86ScreenSaver ] };

        // keycode not generated by Pandora input devices
//      key <I162> { [ XF86RotateWindows ] };

        // keycode not generated by Pandora input devices
//      key <I163> { [ XF86Mail ] };

        // keycode not generated by Pandora input devices
//      key <I164> { [ XF86Favorites ] };

        // keycode not generated by Pandora input devices
//      key <I165> { [ XF86MyComputer ] };

        // keycode not generated by Pandora input devices
//      key <I166> { [ XF86Back ] };

        // keycode not generated by Pandora input devices
//      key <I167> { [ XF86Forward ] };

        // keycode not generated by Pandora input devices
//      key <I169> { [ XF86Eject ] };

        // keycode not generated by Pandora input devices
//      key <I170> { [ XF86Eject, XF86Eject ] };

        // keycode not generated by Pandora input devices
//      key <I171> { [ XF86AudioNext ] };

        // keycode not generated by Pandora input devices
//      key <I172> { [ XF86AudioPlay, XF86AudioPause ] };

        // keycode not generated by Pandora input devices
//      key <I173> { [ XF86AudioPrev ] };

        // keycode not generated by Pandora input devices
//      key <I174> { [ XF86AudioStop, XF86Eject ] };

        // keycode not generated by Pandora input devices
//      key <I175> { [ XF86AudioRecord ] };

        // keycode not generated by Pandora input devices
//      key <I176> { [ XF86AudioRewind ] };

        // keycode not generated by Pandora input devices
//      key <I177> { [ XF86Phone ] };

        // keycode not generated by Pandora input devices
//      key <I179> { [ XF86Tools ] };

        // keycode not generated by Pandora input devices
//      key <I180> { [ XF86HomePage ] };

        // keycode not generated by Pandora input devices
//      key <I181> { [ XF86Refresh ] };

        // keycode not generated by Pandora input devices
//      key <I182> { [ XF86Close ] };

        // keycode not generated by Pandora input devices
//      key <I185> { [ XF86ScrollUp ] };

        // keycode not generated by Pandora input devices
//      key <I186> { [ XF86ScrollDown ] };

        // keycode not generated by Pandora input devices
//      key <I187> { [ parenleft ] };

        // keycode not generated by Pandora input devices
//      key <I188> { [ parenright ] };

        // keycode not generated by Pandora input devices
//      key <I189> { [ XF86New ] };

        // keycode not generated by Pandora input devices
//      key <I190> { [ Redo ] };

        // '´' on Fn layer
        // keycode not mapped by default evdev rules
        key <FK13> { [ acute ] };

        // '|' on Fn layer
        // keycode not mapped by default evdev rules
        key <FK14> { [ bar ] };

        // '_' on Fn layer
        // keycode not mapped by default evdev rules
        key <FK15> { [ underscore ] };

        // '#' on Fn layer
        // keycode not mapped by default evdev rules
        key <FK16> { [ numbersign ] };

        // '!' on Fn layer
        // keycode not mapped by default evdev rules
        key <FK17> { [ exclam ] };

        // '£' on Fn layer
        // keycode not mapped by default evdev rules
        key <FK18> { [ sterling ] };

        // '"' on Fn layer
        // keycode not mapped by default evdev rules
        key <FK19> { [ quotedbl ] };

        // '@' on Fn layer
        // keycode not mapped by default evdev rules
        key <FK20> { [ at ] };

        // ':' on Fn layer
        // keycode not mapped by default evdev rules
        key <FK21> { [ colon ] };

        // '$' on Fn layer
        // keycode not mapped by default evdev rules
        key <FK22> { [ dollar ] };

        // '€' on Fn layer
        // keycode not mapped by default evdev rules
        key <FK23> { [ EuroSign ] };


        // keycode not generated by Pandora input devices
//      key <MDSW> { [ Mode_switch ] };

        // keycode not generated by Pandora input devices
//      key  <ALT> { [ NoSymbol,           Alt_L ] };

        // keycode not generated by Pandora input devices
//      key <META> { [ NoSymbol,          Meta_L ] };

        // keycode not generated by Pandora input devices
//      key <SUPR> { [ NoSymbol,         Super_L ] };

        // keycode not generated by Pandora input devices
//      key <HYPR> { [ NoSymbol,         Hyper_L ] };

        // keycode not generated by Pandora input devices
//      key <I208> { [ XF86AudioPlay ] };

        // keycode not generated by Pandora input devices
//      key <I209> { [ XF86AudioPause ] };

        // keycode not generated by Pandora input devices
//      key <I210> { [ XF86Launch3 ] };

        // keycode not generated by Pandora input devices
//      key <I211> { [ XF86Launch4 ] };

        // keycode not generated by Pandora input devices
//      key <I213> { [ XF86Standby ] };

        // keycode not generated by Pandora input devices
//      key <I214> { [ XF86Close ] };

        // keycode not generated by Pandora input devices
//      key <I215> { [ XF86AudioPlay ] };

        // keycode not generated by Pandora input devices
//      key <I216> { [ XF86Forward ] };

        // keycode not generated by Pandora input devices
//      key <I218> { [ Print ] };

        // keycode not generated by Pandora input devices
//      key <I220> { [ XF86WebCam ] };

        // '?' on Fn layer
        // keycode not mapped by default evdev rules
        key <I222> { [ question ] };

        // keycode not generated by Pandora input devices
//      key <I223> { [ XF86Mail ] };

        // keycode not generated by Pandora input devices
//      key <I225> { [ XF86Search ] };

        // keycode not generated by Pandora input devices
//      key <I227> { [ XF86Finance ] };

        // keycode not generated by Pandora input devices
//      key <I229> { [ XF86Shop ] };

        // keycode not generated by Pandora input devices
//      key <I231> { [ Cancel ] };

        // Brightness down key on Fn layer
        key <I232> { [ XF86MonBrightnessDown ] };

        // Brightness up key on Fn layer
        key <I233> { [ XF86MonBrightnessUp ] };

        // keycode not generated by Pandora input devices
//      key <I234> { [ XF86AudioMedia ] };

        // keycode not generated by Pandora input devices
//    //key <I235> { [ XF86Display ] };
//      key <I235> { [ Tab ] }; // why?

        // keycode not generated by Pandora input devices
//      key <I236> { [ XF86KbdLightOnOff ] };

        // keycode not generated by Pandora input devices
//      key <I237> { [ XF86KbdBrightnessDown ] };

        // keycode not generated by Pandora input devices
//      key <I238> { [ XF86KbdBrightnessUp ] };

        // keycode not generated by Pandora input devices
//      key <I239> { [ XF86Send ] };

        // keycode not generated by Pandora input devices
//      key <I240> { [ XF86Reply ] };

        // keycode not generated by Pandora input devices
//      key <I241> { [ XF86MailForward ] };

        // keycode not generated by Pandora input devices
//      key <I242> { [ XF86Save ] };

        // keycode not generated by Pandora input devices
//      key <I243> { [ XF86Documents ] };


        modifier_map Control { <LCTL> };
        modifier_map Shift { <LFSH> };
        modifier_map Shift { <RTSH> };
        modifier_map Mod1 { <LALT> };
        modifier_map Lock { <CAPS> };
        modifier_map Mod2 { <NMLK> };
        modifier_map Mod5 { <LVL3> };
        modifier_map Control { <RCTL> };
        modifier_map Mod1 { <RALT> };
        modifier_map Mod5 { <MDSW> };
        modifier_map Mod1 { <META> };
        modifier_map Mod4 { <SUPR> };
        modifier_map Mod4 { <HYPR> };
};

partial hidden alphanumeric_keys
xkb_symbols "function" {
    key <FK01> {
        type="CTRL+ALT",
        symbols[Group1]= [ F1,	XF86_Switch_VT_1 ]
    };
    key <FK02> {
        type="CTRL+ALT",
        symbols[Group1]= [ F2,	XF86_Switch_VT_2 ]
    };
    key <FK03> {
        type="CTRL+ALT",
        symbols[Group1]= [ F3,	XF86_Switch_VT_3 ]
    };
    key <FK04> {
        type="CTRL+ALT",
        symbols[Group1]= [ F4,	XF86_Switch_VT_4 ]
    };
    key <FK05> {
        type="CTRL+ALT",
        symbols[Group1]= [ F5,	XF86_Switch_VT_5 ]
    };
    key <FK06> {
        type="CTRL+ALT",
        symbols[Group1]= [ F6,	XF86_Switch_VT_6 ]
    };
    key <FK07> {
        type="CTRL+ALT",
        symbols[Group1]= [ F7,	XF86_Switch_VT_7 ]
    };
    key <FK08> {
        type="CTRL+ALT",
        symbols[Group1]= [ F8,	XF86_Switch_VT_8 ]
    };
    key <FK09> {
        type="CTRL+ALT",
        symbols[Group1]= [ F9,	XF86_Switch_VT_9 ]
    };
    key <FK10> {
        type="CTRL+ALT",
        symbols[Group1]= [ F10,	XF86_Switch_VT_10 ]
    };
    key <FK11> {
        type="CTRL+ALT",
        symbols[Group1]= [ F11,	XF86_Switch_VT_11 ]
    };
    key <FK12> {
        type="CTRL+ALT",
        symbols[Group1]= [ F12,	XF86_Switch_VT_12 ]
    };
};

partial hidden alphanumeric_keys
xkb_symbols "editing" {
    key <PRSC> {
	type= "PC_ALT_LEVEL2",
	symbols[Group1]= [ Print, Sys_Req ]
    };
    key <SCLK> {  [  Scroll_Lock	]	};
    key <PAUS> {
	type= "PC_CONTROL_LEVEL2",
	symbols[Group1]= [ Pause, Break ]
    };
    key  <INS> {	[  Insert		]	};
    key <HOME> {	[  Home			]	};
    key <PGUP> {	[  Prior		]	};
    key <DELE> {	[  Delete		]	};
    key  <END> {	[  End			]	};
    key <PGDN> {	[  Next			]	};

    key   <UP> {	[  Up			]	};
    key <LEFT> {	[  Left			]	};
    key <DOWN> {	[  Down			]	};
    key <RGHT> {	[  Right		]	};
};

